class SummaryRanges {
    var stream: [[Int]]

    init() {
        self.stream = []
    }
    
    func addNum(_ value: Int) {
        if stream.isEmpty {
            stream = [[value, value]]
            return
        }

        let count = stream.count
        for i in 0..<count {
            let interval = stream[i]

            if interval[0] - 1 > value {
                stream.insert([value, value], at: i)
                return
            } else if interval[0] - 1 == value {
                stream[i] = [value, interval[1]]
                return
            } else if interval[0] <= value && interval[1] >= value {
                return 
            } else if interval[1] + 1 == value {
                if i != count - 1, stream[i + 1][0] - 1 == value {
                    stream[i] = [interval[0], stream[i + 1][1]]
                    stream.remove(at: i + 1)
                } else {
                    stream[i] = [interval[0], value]
                }
                return
            }
        }

        stream.append([value, value])
    }
    
    func getIntervals() -> [[Int]] {
        return stream
    }
}

/**
 * Your SummaryRanges object will be instantiated and called as such:
 * let obj = SummaryRanges()
 * obj.addNum(value)
 * let ret_2: [[Int]] = obj.getIntervals()
 */